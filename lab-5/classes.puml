@startuml
'https://plantuml.com/sequence-diagram

class Main {
 ...()
}

Class MusicBand {
    - Integer id
    - String name
    - Coordinates coordinates
    - java.time.LocalDate creationDate {auto}
    - int numberOfParticipants {>0}
    - long albumsCount {>0}
    - java.util.Date? establishmentDate
    - MusicGenre genre
    - Label label
}

Class Coordinates {
    - Double x
    - Double y
}
Coordinates --* MusicBand::coordinates

together {
    class Label {
        - long bands
    }
}

Label -up-* MusicBand::label

enum MusicGanre {
    PROGRESSIVE_ROCK
    RAP
    BLUES
    PUNK_ROCK
}
MusicGanre --* MusicBand::genre

together {
    class MusicBandStorage #AAFFAA {
        - Queue history
        - LinkedHashSet<MusicBand> storage
        - {auto} sort()

    }

}

class StorageManager #AAFFAA {
    - read()
    + help()
    + info()
    + show()
    + add(MusicBand)
    + update_id(int id)
    + remove_by_id(int id)
    + clear()
    + save()
    + execute_script(String fileName)
    + exit()
    + add_if_max(MusicBand)
    + remove_greater(MusicBand)
    + history() //last 6
    + average_of_number_of_participants()
    + count_less_than_albums_count(long albumsCount)
    + print_ascending()
    + ...()
}

StorageManager o-left- MusicBandStorage

class java.util.LinkedHashSet << (C, #EEAAAA) >> #EFCCCC
class java.io.InputStreamReader << (C, #EEAAAA) >> #EFCCCC
class java.io.PrintWriter << (C, #EEAAAA) >> #EFCCCC

MusicBandStorage -down-|> java.util.LinkedHashSet
Main o-up- java.io.InputStreamReader
Main o-up- java.io.PrintWriter

MusicBandStorage o-left- MusicBand

class JavaDoc << (J, #FFCC99)>> #FFDD99
class JSON << (J, #FFCC99)>> #FFDD99
MusicBandStorage .. JavaDoc: uses >
MusicBandStorage .. JSON

class InputException << (X, #FFAAAA)>> #FFCC99;line:red
InputException .down.o MusicBandStorage

MusicBandStorage <-> Message
Message ..> Main
Message <.. Validator
Validator <.right.> Main
Main -() io
enum MessageType {
REQUEST
RESPONSE
}
Message .up.o MessageType: ???

abstract class Command {
    runtimeCycle()
}
object commands

commands -left-o MusicBandStorage
Command <|-- commands

interface ICommand {
    runtimeCycle()
}

@enduml